type Chat @model @auth(rules: [{ allow: private }]) {
    id: ID!
    userID: ID! @index(name: "byUser")
    human: String!
    bot: String
    payload: AWSJSON
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

# filter subscription updates based on user ID
# https://docs.amplify.aws/gen1/react/build-a-backend/graphqlapi/subscribe-data/#create-a-custom-graphql-subscription-by-id
type Subscription {
	onChatByUserId(userID: ID!): Chat
		@aws_subscribe(mutations: ["createChat", "updateChat"])
}

# lambda resolver mutation
type Mutation {
	resolverLambda(args: String): String
		@function(name: "resolverLambda")
		@auth(rules: [{ allow: private }])
}
